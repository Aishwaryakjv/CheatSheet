Find duplicates for sorted array:

//in java
import java.util.*;
class Main{
    public static void main(String[] args) {
        int arr[]=new int[5];
        int temp[]=new int[5];
        Scanner sc=new Scanner(System.in);
        for(int i=0;i<5;i++)
        {
            arr[i]=sc.nextInt();
        }
        int j=0;
        for(int i=0;i<4;i++)
        {
            if(arr[i]!=arr[i+1])
            temp[j++]=arr[i];
        }
        temp[j]=arr[4];
        System.out.print("\n");
        for(int i=0;i<=j;i++)
        {
            System.out.print(temp[i]+" ");
        }
    }
}

find duplicates in unsorted array:

import java.util.*;
public class practice {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int[] arr = new int[20];
		int[] ascii = new int[125];
		int n;
		System.out.println("Enter the number of elements");
		n = sc.nextInt();
		for(int i=0;i<n;i++) {
			arr[i]=sc.nextInt();
		}
		for(int i=0;i<n;i++) {
			int num = (char) arr[i];
			ascii[num]++;
		}
		for(int i=0;i<123;i++) {
			if(ascii[i]>0) {
				System.out.println(i);
			}
		}
	}
}

or

import java.util.*;
 
class GFG {
    public static void main(String[] args)
    {
        int a[] = { 5, 2, 6, 8, 6, 7, 5, 2, 8 };
        int n = a.length;
 
        // m will have the maximum element in the array.
        int m = 0;
 
        for (int i = 0; i < n; i++) {
            m = Math.max(m, a[i]);
        }
 
        // creating the frequency array
        int[] f = new int[m + 1];
 
        // initializing the f[] with 0
        for (int i = 0; i < m + 1; i++) {
            f[i] = 0;
        }
 
        // incrementing the value at a[i]th index
        // in the frequency array
        for (int i = 0; i < n; i++)
        {
            f[a[i]]++;
        }
 
        for (int i = 0; i < m + 1; i++)
        {
   
            // if the frequency of the particular element
            // is greater than 0, then print it once
            if (f[i] > 0) {
                System.out.print(i + " ");
            }
        }
    }
}

