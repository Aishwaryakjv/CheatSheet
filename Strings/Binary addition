Binary addition using int array:

//in java....
import java.lang.Math;
class Main {
  public static void main(String[] args) {
   // System.out.println("Hello world!");
    int a=10101111;
    int b=11111100;
    int d1=0,d2=0,n=0;
    while(a>0)
      {
        int rem=a%10;
        a=a/10;
        d1+=rem*Math.pow(2,n);
        n++;
      }
    n=0;
    while(b>0)
      {
        int rem=b%10;
        b=b/10;
        d2+=rem*Math.pow(2,n);
        n++;
      }
    int sum=d1+d2;
    System.out.println(sum);
    int i=0;
    int ans[]=new int[100];
      
    while(sum>0)
      {
        int rem=sum%2;
        sum=sum/2;
        ans[i++]=rem;
      }

    System.out.println(ans[8]+"\n");
    for(int j=i-1;j>=0;j--)
      System.out.print(ans[j]);
  }
}


in cpp
class Solution {
public:
    string addBinary(string a, string b) {
        int n=a.size()-1;
        int m=b.size()-1;
        int t=0;//carry
        string sum="";
        while(n>=0||m>=0||t==1)
        {
            t+=(n>=0?a[n]-'0':0);
            t+=(m>=0?b[m]-'0':0);
            n--;
            m--;
            sum=char(t%2+'0')+sum;
            t=t/2;
        }
        return sum;
    }
};

//in java....
class Solution {
    public String addBinary(String a, String b) {
        int t=0;
        int n=a.length()-1;
        int m=b.length()-1;
        String sum="";
        //StringBuilder sum=new StringBuilder(" ");
        while(t==1||n>=0||m>=0)
        {
            t+=(n>=0?(a.charAt(n)-'0'):0);
            t+=(m>=0?(b.charAt(m)-'0'):0);
            n--;
            m--;
            sum=(char)(t%2+'0')+sum; //or directly (t%2)+sum bcs in java automatically implicit conversion will happen
            t=t/2;
        }
        return sum.toString();
    }
}


//in c....integer
#include <stdio.h>
 
int main()
{
 
    long binary1, binary2;
    int i = 0, remainder = 0, sum[20];
 
    printf("Enter the first binary number: ");
    scanf("%ld", &binary1);
    printf("Enter the second binary number: ");
    scanf("%ld", &binary2);
    while (binary1 != 0 || binary2 != 0)
    {
        sum[i++] =(binary1 % 10 + binary2 % 10 + remainder) % 2;
        remainder =(binary1 % 10 + binary2 % 10 + remainder) / 2;
        binary1 = binary1 / 10;
        binary2 = binary2 / 10;
    }
    if (remainder != 0)
        sum[i++] = remainder;
    --i;
    printf("Sum of two binary numbers: ");
    while (i >= 0)
        printf("%d", sum[i--]);
    return 0;
}


//in java: 
public class Main
{
	public static void main(String[] args) {
		String str1="101";
		String str2="1";
		int t=0,rem=0;
		String res="";
		int m=str1.length()-1;
		int n=str2.length()-1;
		while(m>=0||n>=0||rem==1)
		{
		    if(m>=0&&n>=0)
		    {
		        t=((str1.charAt(m)-'0')+(str2.charAt(n)-'0')+rem)%2;
		        rem=((str1.charAt(m)-'0')+(str2.charAt(n)-'0'))/2;
		        System.out.println(t);
		    }
		    else if(m<0&&n>=0)
		    {
		        t=(0+(str2.charAt(n)-'0')+rem)%2;
		        rem=(0+(str2.charAt(n)-'0'))/2;
		    }
		    else if(n<0&&m>=0)
		    {
		        t=((str1.charAt(m)-'0')+0+rem)%2;
		        rem=((str1.charAt(m)-'0')+0)/2;
		    }
		    else if(n<0&&m<0)
		    {
		        //System.out.println("hi");
		        t=(0+0+rem)%2;
		        rem=(0+0)/2;
		        //System.out.println(rem);
		    }
		    m--;
		    n--;
		   res=t+res;
	//	System.out.println(res);
		}
		System.out.println(res);
		
	}
}
